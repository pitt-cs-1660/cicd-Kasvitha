version: "3.8"

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  nginx-logs:

services:
  fastapi:
    build:
      context: .
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/healthz"]
      interval: 10s
      timeout: 60s
      retries: 5
    environment:
      - DB_PATH=postgresql://postgres:postgrespassword@postgres:5432/tasksdb
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: always
    networks:
      - app-network

  postgres:
    image: postgres:15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 15  # Increased retries to ensure PostgreSQL is ready before FastAPI starts
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: tasksdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-logs:/var/log/nginx  # Mounted volume for logs
    depends_on:
      fastapi:
        condition: service_healthy  # Ensures FastAPI is fully running before Nginx starts
    restart: always
    networks:
      - app-network
