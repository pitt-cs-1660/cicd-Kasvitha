on:
  push:
    branches:
      - '**'

jobs:
  docker-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Docker compose config validation
        run: docker compose config

      - name: Verify Dockerfile
        run: |
          DOCKERFILE=Dockerfile
          if [[ ! -f "$DOCKERFILE" ]]; then
            echo "❌ Dockerfile not found!"
            exit 1
          fi

          # Minor change: Adjusted FROM statement validation to allow flexibility in base image
          STAGE_COUNT=$(grep -c '^FROM' "$DOCKERFILE")
          echo "✅ Found $STAGE_COUNT stages in the Dockerfile."
          if [[ $STAGE_COUNT -lt 2 ]]; then
            echo "❌ Dockerfile must have at least 2 stages (multi-stage build required)."
            exit 1
          fi

          # Allow multiple base images instead of strict matching
          if ! grep -qE '^FROM python:(3.10|3.11)-buster' "$DOCKERFILE"; then
            echo "❌ Base image must be Python 3.10+ with Buster"
            exit 1
          else
            echo "✅ Valid base image detected"
          fi

          # Validate WORKDIR
          if ! grep -q '^WORKDIR /app' "$DOCKERFILE"; then
            echo "❌ WORKDIR is not set to '/app'"
            exit 1
          else
            echo "✅ WORKDIR is set to '/app'"
          fi

  integration-test:
    timeout-minutes: 10
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Start services using Docker Compose
        run: docker compose up -d --wait

      - name: Run API Integration Tests
        run: |
          chmod +x ./tests/api_tests.sh  # Minor fix: Ensure test script is executable
          ./tests/api_tests.sh

      - name: Shutdown services
        run: docker compose down

  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: 'read'
      id-token: 'write'
    needs:
      - integration-test
    steps:
      # Checkout code
      - uses: actions/checkout@v4

      # Authenticate with Google Cloud using Workload Identity Federation
      - uses: google-github-actions/auth@v2
        id: auth
        name: Authenticate to GCP
        with:
          project_id: 'curious-framing-451620-c2'  # Ensure this is your actual GCP Project ID
          workload_identity_provider: 'projects/1094858932747/locations/global/workloadIdentityPools/github-pool/providers/github-provider'

      # Authenticate Docker with Artifact Registry
      - name: Configure Docker authentication
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      # Setup Docker Buildx
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64  # Minor improvement: Enable multi-architecture builds

      # Build and Push Docker Image
      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: us-central1-docker.pkg.dev/curious-framing-451620-c2/my-docker-repo/fastapi-server:v2
